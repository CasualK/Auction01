'use strict';

exports.__esModule = true;
exports.default = tillTruly;

var _helpers = require('./internals/helpers');

function defaultOnFail() {
  return undefined;
}

function tillTruly(variants, match) {
  var onFail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultOnFail;

  var matcher = (0, _helpers.isFunction)(match) ? match : function (result) {
    return result === match;
  };
  var isHashMap = !(0, _helpers.isArray)(variants);
  var iterableKeys = isHashMap ? (0, _helpers.keys)(variants)[Symbol.iterator]() : variants.keys();
  return function tillTrulyChain() {
    var next = iterableKeys.next();

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    while (!next.done) {
      var key = next.value;
      var result = (0, _helpers.isFunction)(variants[key]) ? variants[key].apply(this, args) : variants[key];
      if (matcher.apply(this, [result].concat(args))) {
        return isHashMap ? key : result;
      }
      next = iterableKeys.next();
    }
    for (var i = 0; i < variants.length; i++) {
      var _result = (0, _helpers.isFunction)(variants[i]) ? variants[i].apply(this, args) : variants[i];
      if (matcher.apply(this, [_result].concat(args))) {
        return _result;
      }
    }
    return (0, _helpers.isFunction)(onFail) ? onFail.apply(this, args) : onFail;
  };
}
module.exports = exports['default'];